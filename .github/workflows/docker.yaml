name: Publish Docker image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Create Docker network_postgresql
        run: docker network create --subnet=192.168.18.0/24 network_postgres

      - name: Create Docker network_eureka
        run: docker network create --subnet=192.168.10.0/24 network_eureka

      - name: Run postgresSql container
        run: |
          docker run -d --name postgres \
          --network network_postgres \
          --ip 192.168.18.164 \
          -e POSTGRES_USER=postgres \
          -e POSTGRES_PASSWORD=system \
          -e POSTGRES_DB=solutionv2produccion \
          -p 5432:5432 \
          postgres:15.0

      - name: Run Eureka container
        run: |
          docker run -d --name eureka \
          --network network_eureka \
          --ip 192.168.10.35 \
          -e EUREKA_CLIENT_REGISTER_WITH_EUREKA=false \
          -e EUREKA_CLIENT_FETCH_REGISTRY=false \
          -p 6666:6666 \
          desarrollohusjp/eurekaserver-image

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle inside Docker
        run: |
          docker run --rm \
          --network network_postgres \
          --network network_eureka \
          -v ${{ github.workspace }}:/workspace \
          -w /workspace \
          gradle:8.10.2-jdk21-alpine \
          ./gradlew build

      #dar una espera de 5 segundos para que los contenedores se levanten
      - name: Wait for 5 seconds
        run: sleep 5

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/microservices:mesaprosesos-image .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/microservices:mesaprosesos-image

      # Detener y remover los contenedores y la red
      - name: Stop and remove containers
        run: |
          docker stop postgres
          docker stop eureka
          docker rm postgres
          docker rm eureka
          docker network rm network_postgres
          docker network rm network_eureka